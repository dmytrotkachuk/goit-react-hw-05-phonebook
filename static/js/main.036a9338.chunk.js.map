{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Appbar/Appbar.module.css","components/ContactList/ContactList.module.css","components/ContactList/transitions.module.css","components/Appbar/transitions.module.css","components/Notification/Notification.module.css","components/transitions.module.css","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Appbar/Appbar.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Searchbar","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","className","styles","contactForm","onSubmit","htmlFor","contactFormItem","type","id","onChange","contactBtn","Component","Contact","contact","onRemove","contactData","button","onClick","ContactList","contacts","TransitionGroup","component","contactList","map","CSSTransition","classNames","transitions","timeout","key","uuidv4","Filter","onChangeFilter","filterContainer","filterName","filterField","Appbar","header","in","appear","title","Notification","isAlready","setTimeout","notify","App","filter","notification","addContact","find","prevState","removeContact","contactId","console","log","changeFilter","getVisibleContact","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","notifyTransitions","unmountOnExit","ContactForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.036a9338.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"contactFormItem\":\"ContactForm_contactFormItem__20OVP\",\"contactBtn\":\"ContactForm_contactBtn__1QKp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"button\":\"Contact_button__1wUL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"filterName\":\"Filter_filterName__2ZMlt\",\"filterField\":\"Filter_filterField__32LCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Appbar_title__1hL3J\",\"header\":\"Appbar_header__P0ILF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitions_enter__xQ9hX\",\"enterActive\":\"transitions_enterActive__GM_D_\",\"exit\":\"transitions_exit__2hksT\",\"exitActive\":\"transitions_exitActive__1YtsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"transitions_appear__10Q_3\",\"appearActive\":\"transitions_appearActive__1Gqwz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"Notification_notify__w_yYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"transitions_appear__3JmJR\",\"appearActive\":\"transitions_appearActive__3Yc8C\",\"enter\":\"transitions_enter__Y__Sk\",\"enterActive\":\"transitions_enterActive__2z536\",\"exit\":\"transitions_exit__34Idt\",\"exitActive\":\"transitions_exitActive__3Ul1h\"};","import React, {Component} from 'react'\nimport styles from './ContactForm.module.css'\n\nclass Searchbar extends Component{\n\n    state={\n        name:'',\n        number:''\n    }\n\n\n    handleChange= e => {\n        const {name, value } = e.target\n            this.setState({[name]:value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.onAddContact(this.state)\n        this.setState({name:'', number:''})\n    }\n\n    render(){\n        const {name, number} = this.state\n        return(\n            <>\n            \n            <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n            <label \n                htmlFor='name'\n                className={styles.contactFormItem}\n\n                >Name</label>\n            <input\n                className={styles.contactFormItem}\n                type='text'\n                id='name'\n                name='name'\n                value={name}\n                onChange={this.handleChange}\n                \n            />\n            <label \n                htmlFor='phone'\n                className={styles.contactFormItem}\n            >Phone</label>\n\n            <input\n            className={styles.contactFormItem}\n            type='text'\n            id='phone'\n            name='number'\n            value={number}\n            onChange={this.handleChange}\n            />\n\n            <button \n            className={styles.contactBtn}\n            >Add contact</button>\n\n            </form>\n            </>\n        )\n    }\n}\n\nexport default Searchbar","import React from 'react'\nimport styles from './Contact.module.css'\nimport PropTypes from 'prop-types';\n\nconst Contact = ({contact,onRemove}) => {\n\n    return(\n    <li className={styles.contact}>\n    <p className={styles.contactData}>{contact.name}</p>\n    <p className={styles.contactData}>{contact.number}</p>\n    <button \n    className={styles.button} \n    onClick={() => onRemove(contact.id)}\n    >X</button>\n    </li>\n    \n    )}\n\nexport default Contact;\n\n\nContact.propTypes = {\n    contact: PropTypes.shape(PropTypes.string.isRequired) ,\n    onRemove: PropTypes.func\n}","import React from 'react'\nimport Contact from '../Contact/Contact'\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition , TransitionGroup} from 'react-transition-group'\nimport styles from './ContactList.module.css'\nimport transitions from './transitions.module.css'\n\nconst ContactList = ({contacts, onRemove}) => {\n    return(\n    <TransitionGroup component='ul' className={styles.contactList}>\n   \n        {contacts.map(contact => \n        \n        <CSSTransition \n        classNames={transitions}\n        timeout={200}\n        key={uuidv4()}> \n\n        <Contact contact={contact} onRemove={onRemove}/> \n\n        </CSSTransition>)}\n\n\n    </TransitionGroup>\n    )\n}\n\nexport default ContactList;","import React from 'react'\nimport styles from './Filter.module.css'\n\nconst Filter = ({value, onChangeFilter}) =>(\n    <div className={styles.filterContainer}>\n    <label className={styles.filterName} htmlFor='filter'>Find contacts by name</label>\n    <input\n    className={styles.filterField}\n    type='text'\n    value={value}\n    onChange={(e)=> onChangeFilter(e.target.value)}\n    id='filter'/>\n    </div>\n)\n\nexport default Filter;","import React from 'react'\nimport styles from './Appbar.module.css'\nimport { CSSTransition} from 'react-transition-group'\nimport transitions from './transitions.module.css'\n// import Notification from '../Notification/Notification'\n\nconst Appbar = () => (\n    <header className={styles.header}>\n    <CSSTransition in={true} appear={true} classNames={transitions} timeout={500} >\n    <h1 className={styles.title}>Phonebook</h1>\n    </CSSTransition>\n    </header>\n)\n\nexport default Appbar;","import React from 'react'\nimport styles from './Notification.module.css'\n\nconst Notification = ({isAlready}) =>{\n    setTimeout(isAlready, 3000)\n    return <p className={styles.notify}>Name is already in contacts.</p>}\n\nexport default Notification;","import React, {Component} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {CSSTransition} from 'react-transition-group'\n//import PropTypes from 'prop-types'; \nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport Appbar from './Appbar/Appbar'\nimport Notification from './Notification/Notification'\nimport './App.css'\nimport notifyTransitions from './transitions.module.css'\n\n\n\nclass App extends Component{\n\n  state={\n    contacts:[\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter:'',\n    notification: false\n\n  }\n\n  componentDidMount(){\n    const persistedContacts = localStorage.getItem('contacts')\n    if(persistedContacts){\n      this.setState({contacts: JSON.parse(persistedContacts)})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (prevState.contacts !== this.state.contacts){\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n  }\n\n  addContact = ({name,number}) => {\n    const statement = this.state.contacts.find(contact => contact.name===name);\n\n    if(statement){\n      return this.setState({notification:true})\n    }\n    \n\n    if(name && number){\n      const contact ={\n        id: uuidv4(),\n        name: name,\n        number: number\n      }\n      this.setState(prevState => ({contacts: [...prevState.contacts, contact],notification:false}))\n    }\n  }\n\n  isAlready = ()=>{\n    this.setState({notification:false})\n  }\n  removeContact = contactId =>{\n    console.log(contactId)\n    this.setState(prevState => ({contacts: prevState.contacts.filter(({id})=> id!==contactId)}))\n  }\n\n  changeFilter = filter =>{\n    this.setState({filter})\n  }\n\n  getVisibleContact = () =>{\n    const {contacts, filter} = this.state\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n\n  }\n\n  render(){\n    const {filter,notification} = this.state\n    const visibleContacts = this.getVisibleContact()\n    return(\n      <div className='wrapper'>\n      <Appbar/>\n      <CSSTransition in={notification}  classNames={notifyTransitions} timeout={250} unmountOnExit>\n      <Notification isAlready={this.isAlready}/>\n      </CSSTransition>\n      <ContactForm onAddContact={this.addContact}/>\n      <Filter value={filter} onChangeFilter={this.changeFilter}/>\n      <ContactList contacts={visibleContacts} onRemove={this.removeContact}/>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}